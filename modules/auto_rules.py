"""
Sistema de Reglas Autom√°ticas para DaBot v2
Gestiona reglas espec√≠ficas por canal y servidor
"""

import nextcord
from nextcord.ext import commands
import sqlite3
import asyncio
from datetime import datetime, timedelta
import re

class AutoRules(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.init_database()
        
    def init_database(self):
        """Inicializar base de datos para reglas"""
        with sqlite3.connect('data/bot_data.db') as conn:
            cursor = conn.cursor()
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS channel_rules (
                    guild_id INTEGER,
                    channel_id INTEGER,
                    rule_type TEXT,
                    enabled BOOLEAN DEFAULT 1,
                    PRIMARY KEY (guild_id, channel_id, rule_type)
                )
            ''')
            cursor.execute('''
                CREATE TABLE IF NOT EXISTS server_rules (
                    guild_id INTEGER PRIMARY KEY,
                    rules_channel_id INTEGER,
                    rules_content TEXT,
                    auto_rules_enabled BOOLEAN DEFAULT 1
                )
            ''')
            conn.commit()

    async def setup_server_rules(self, guild, template_type):
        """Configurar reglas autom√°ticas seg√∫n el tipo de servidor"""
        rules_templates = {
            "streamer": {
                "title": "üìã REGLAS DEL SERVIDOR - COMUNIDAD STREAMER",
                "rules": [
                    "üé≠ **RESPETO Y CONVIVENCIA**",
                    "‚Ä¢ Trata a todos con respeto y amabilidad",
                    "‚Ä¢ No se permite spam, flood o trolling",
                    "‚Ä¢ Prohibido el lenguaje t√≥xico, insultos o discriminaci√≥n",
                    "‚Ä¢ Respeta las opiniones de otros miembros",
                    "",
                    "üéÆ **CONTENIDO Y CHAT**",
                    "‚Ä¢ Mant√©n los temas en sus canales correspondientes",
                    "‚Ä¢ No spoilers sin avisar previamente",
                    "‚Ä¢ Respeta al streamer y no interrumpas con temas irrelevantes",
                    "‚Ä¢ Los links solo en <#links-clips>",
                    "",
                    "üîä **CANALES DE VOZ**",
                    "‚Ä¢ No grites ni hagas ruidos molestos",
                    "‚Ä¢ Respeta a quien est√© hablando",
                    "‚Ä¢ Usa push-to-talk si hay ruido de fondo",
                    "‚Ä¢ No reproduzcas m√∫sica sin permiso",
                    "",
                    "üé® **CONTENIDO CREATIVO**",
                    "‚Ä¢ El fanart va en <#fanart>",
                    "‚Ä¢ Respeta los derechos de autor",
                    "‚Ä¢ No resubas contenido sin dar cr√©ditos",
                    "",
                    "‚ö†Ô∏è **MODERACI√ìN**",
                    "‚Ä¢ Las decisiones del staff son finales",
                    "‚Ä¢ Para apelaciones, usa el sistema de tickets",
                    "‚Ä¢ Reporta problemas al staff mediante tickets",
                    "‚Ä¢ Las infracciones pueden resultar en warns, timeouts o bans"
                ]
            },
            "gaming": {
                "title": "üìã REGLAS DEL SERVIDOR - GAMING",
                "rules": [
                    "üéÆ **GAMING Y RESPETO**",
                    "‚Ä¢ Respeto absoluto entre gamers",
                    "‚Ä¢ No toxicidad en ning√∫n juego o situaci√≥n",
                    "‚Ä¢ Ayuda a otros jugadores cuando sea posible",
                    "‚Ä¢ Celebra las victorias, aprende de las derrotas",
                    "",
                    "üéØ **BUSCAR EQUIPO**",
                    "‚Ä¢ Usa los canales LFG espec√≠ficos para cada g√©nero",
                    "‚Ä¢ S√© claro sobre tu nivel y disponibilidad",
                    "‚Ä¢ Respeta los horarios acordados",
                    "‚Ä¢ No abandones equipos sin avisar",
                    "",
                    "üí¨ **CHAT Y COMUNICACI√ìN**",
                    "‚Ä¢ Screenshots y clips en <#screenshots>",
                    "‚Ä¢ Logros y achievements en <#logros>",
                    "‚Ä¢ Links solo en canales permitidos",
                    "‚Ä¢ No spam de invitaciones a otros servidores",
                    "",
                    "üîä **VOZ EN GAMING**",
                    "‚Ä¢ Comunicaci√≥n clara durante partidas",
                    "‚Ä¢ No culpes a tus compa√±eros por derrotas",
                    "‚Ä¢ Usa los canales privados para conversaciones largas",
                    "‚Ä¢ El canal competitivo es solo para partidas serias",
                    "",
                    "‚ö†Ô∏è **MODERACI√ìN**",
                    "‚Ä¢ No cheats, hacks o comportamiento desleal",
                    "‚Ä¢ Reporta tramposos o t√≥xicos",
                    "‚Ä¢ El staff puede mediar en disputas de equipos",
                    "‚Ä¢ Infracciones graves = ban permanente"
                ]
            },
            "desarrollo": {
                "title": "üìã REGLAS DEL SERVIDOR - DESARROLLO",
                "rules": [
                    "üíª **PROFESIONALISMO Y RESPETO**",
                    "‚Ä¢ Mant√©n un ambiente profesional y colaborativo",
                    "‚Ä¢ Respeta todos los niveles de experiencia",
                    "‚Ä¢ Ayuda a juniors, aprende de seniors",
                    "‚Ä¢ No menosprecies tecnolog√≠as o lenguajes",
                    "",
                    "üîß **DESARROLLO Y C√ìDIGO**",
                    "‚Ä¢ Usa los canales espec√≠ficos para cada tecnolog√≠a",
                    "‚Ä¢ Formatea tu c√≥digo con ``` bloques de c√≥digo",
                    "‚Ä¢ Explica el contexto de tu problema",
                    "‚Ä¢ Comparte recursos √∫tiles para la comunidad",
                    "",
                    "‚ùì **AYUDA Y DEBUGGING**",
                    "‚Ä¢ Describe claramente tu problema",
                    "‚Ä¢ Incluye c√≥digo relevante y mensajes de error",
                    "‚Ä¢ Usa <#code-review> para revisiones",
                    "‚Ä¢ Agradece la ayuda recibida",
                    "",
                    "üíº **TRABAJOS Y PROYECTOS**",
                    "‚Ä¢ Ofertas laborales en <#trabajos>",
                    "‚Ä¢ S√© honesto sobre pagos y condiciones",
                    "‚Ä¢ No spam de ofertas",
                    "‚Ä¢ Colaboraciones en <#ideas>",
                    "",
                    "‚ö†Ô∏è **MODERACI√ìN**",
                    "‚Ä¢ No pirater√≠a ni contenido ilegal",
                    "‚Ä¢ Respeta las licencias de software",
                    "‚Ä¢ No ataques personales por preferencias t√©cnicas",
                    "‚Ä¢ El conocimiento se comparte, no se monopoliza"
                ]
            },
            "general": {
                "title": "üìã REGLAS DEL SERVIDOR - COMUNIDAD GENERAL",
                "rules": [
                    "üåü **CONVIVENCIA GENERAL**",
                    "‚Ä¢ Trata a todos con respeto y amabilidad",
                    "‚Ä¢ Mant√©n conversaciones amigables y constructivas",
                    "‚Ä¢ Acepta y respeta las diferencias de opini√≥n",
                    "‚Ä¢ Ayuda a crear un ambiente acogedor",
                    "",
                    "üí¨ **CHAT Y CONTENIDO**",
                    "‚Ä¢ Usa los canales tem√°ticos apropiados",
                    "‚Ä¢ Fotos y media en <#fotos-media>",
                    "‚Ä¢ Links interesantes en <#links>",
                    "‚Ä¢ Comandos del bot en <#bot-zone>",
                    "",
                    "üé≠ **ENTRETENIMIENTO**",
                    "‚Ä¢ Comparte tus aficiones sin spam",
                    "‚Ä¢ Respeta los gustos de otros",
                    "‚Ä¢ Participa en eventos y actividades",
                    "‚Ä¢ Sugiere ideas para el servidor",
                    "",
                    "üîä **CANALES DE VOZ**",
                    "‚Ä¢ Entra y sal con educaci√≥n",
                    "‚Ä¢ No monopolices la conversaci√≥n",
                    "‚Ä¢ Respeta el tema del canal",
                    "‚Ä¢ M√∫sica con moderaci√≥n",
                    "",
                    "‚ö†Ô∏è **MODERACI√ìN**",
                    "‚Ä¢ No contenido NSFW fuera de canales designados",
                    "‚Ä¢ No publicidad sin permiso",
                    "‚Ä¢ Reporta problemas al staff",
                    "‚Ä¢ Las decisiones del staff son definitivas"
                ]
            }
        }
        
        template = rules_templates.get(template_type, rules_templates["general"])
        
        # Buscar canal de reglas
        rules_channel = None
        for channel in guild.text_channels:
            if "reglas" in channel.name.lower() or "rules" in channel.name.lower():
                rules_channel = channel
                break
        
        if not rules_channel:
            return None
            
        # Crear embed de reglas
        embed = nextcord.Embed(
            title=template["title"],
            description="Por favor, lee y respeta estas reglas para mantener una comunidad sana.",
            color=0x00ff00
        )
        
        # A√±adir reglas al embed
        rules_text = "\n".join(template["rules"])
        
        # Dividir en chunks si es muy largo
        if len(rules_text) > 4000:
            chunks = [rules_text[i:i+4000] for i in range(0, len(rules_text), 4000)]
            for i, chunk in enumerate(chunks):
                embed.add_field(
                    name=f"üìã Reglas (Parte {i+1})" if i > 0 else "üìã Reglas del Servidor",
                    value=chunk,
                    inline=False
                )
        else:
            embed.add_field(
                name="üìã Reglas del Servidor",
                value=rules_text,
                inline=False
            )
        
        embed.add_field(
            name="‚úÖ Aceptaci√≥n",
            value="Al participar en este servidor, aceptas cumplir estas reglas.",
            inline=False
        )
        
        embed.set_footer(
            text=f"Servidor configurado el {datetime.now().strftime('%d/%m/%Y')} ‚Ä¢ DaBot v2"
        )
        
        # Enviar reglas
        try:
            await rules_channel.purge(limit=10)
            rules_message = await rules_channel.send(embed=embed)
            
            # Guardar en base de datos
            with sqlite3.connect('data/bot_data.db') as conn:
                cursor = conn.cursor()
                cursor.execute('''
                    INSERT OR REPLACE INTO server_rules 
                    (guild_id, rules_channel_id, rules_content, auto_rules_enabled)
                    VALUES (?, ?, ?, ?)
                ''', (guild.id, rules_channel.id, rules_text, True))
                conn.commit()
            
            return rules_channel
            
        except Exception as e:
            print(f"Error creando reglas: {e}")
            return None

    async def setup_channel_rules(self, guild, template_type):
        """Configurar reglas espec√≠ficas por canal"""
        channel_rules = {
            "no_links": ["general", "chat-general", "charla-casual", "gaming-general"],
            "media_only": ["fanart", "fotos-media", "screenshots"],
            "links_only": ["links", "links-clips"],
            "no_spam": ["ayuda-general", "debug", "code-review"],
            "voice_quality": ["coding-sessions", "screen-share", "competitivo"]
        }
        
        with sqlite3.connect('data/bot_data.db') as conn:
            cursor = conn.cursor()
            
            for channel in guild.text_channels:
                channel_name = channel.name.lower()
                
                # Aplicar regla de no links
                if any(name in channel_name for name in channel_rules["no_links"]):
                    cursor.execute('''
                        INSERT OR REPLACE INTO channel_rules 
                        (guild_id, channel_id, rule_type, enabled)
                        VALUES (?, ?, ?, ?)
                    ''', (guild.id, channel.id, "no_links", True))
                
                # Aplicar regla de solo media
                if any(name in channel_name for name in channel_rules["media_only"]):
                    cursor.execute('''
                        INSERT OR REPLACE INTO channel_rules 
                        (guild_id, channel_id, rule_type, enabled)
                        VALUES (?, ?, ?, ?)
                    ''', (guild.id, channel.id, "media_only", True))
                
                # Aplicar regla de solo links
                if any(name in channel_name for name in channel_rules["links_only"]):
                    cursor.execute('''
                        INSERT OR REPLACE INTO channel_rules 
                        (guild_id, channel_id, rule_type, enabled)
                        VALUES (?, ?, ?, ?)
                    ''', (guild.id, channel.id, "links_only", True))
            
            conn.commit()

    async def check_message_rules(self, message):
        """Verificar reglas en mensajes"""
        if message.author.bot or not message.guild:
            return
            
        # Verificar reglas del canal
        with sqlite3.connect('data/bot_data.db') as conn:
            cursor = conn.cursor()
            cursor.execute('''
                SELECT rule_type FROM channel_rules 
                WHERE guild_id = ? AND channel_id = ? AND enabled = 1
            ''', (message.guild.id, message.channel.id))
            
            rules = cursor.fetchall()
            
            for rule_tuple in rules:
                rule_type = rule_tuple[0]
                
                if rule_type == "no_links":
                    await self._check_no_links(message)
                elif rule_type == "media_only":
                    await self._check_media_only(message)
                elif rule_type == "links_only":
                    await self._check_links_only(message)

    async def _check_no_links(self, message):
        """Verificar regla de no links"""
        url_pattern = r'https?://[^\s]+'
        if re.search(url_pattern, message.content):
            # Buscar canal de links
            links_channel = None
            for channel in message.guild.text_channels:
                if "links" in channel.name.lower():
                    links_channel = channel
                    break
            
            try:
                await message.delete()
                
                embed = nextcord.Embed(
                    title="üö´ Links no permitidos aqu√≠",
                    description=f"Los links deben ir en {links_channel.mention if links_channel else 'el canal de links'}\n\nTu mensaje fue eliminado para mantener el orden.",
                    color=0xffaa00
                )
                embed.set_footer(text="Esta es una advertencia autom√°tica, no un warn oficial.")
                
                await message.author.send(embed=embed)
                
            except:
                pass

    async def _check_media_only(self, message):
        """Verificar regla de solo media"""
        if not message.attachments and not re.search(r'https?://[^\s]+\.(jpg|jpeg|png|gif|webp|mp4|mov)', message.content):
            try:
                await message.delete()
                
                embed = nextcord.Embed(
                    title="üì∑ Solo contenido multimedia",
                    description="Este canal es solo para fotos, videos y contenido multimedia.\n\nPara chat general, usa otros canales.",
                    color=0xffaa00
                )
                embed.set_footer(text="Esta es una advertencia autom√°tica, no un warn oficial.")
                
                await message.author.send(embed=embed)
                
            except:
                pass

    async def _check_links_only(self, message):
        """Verificar regla de solo links"""
        url_pattern = r'https?://[^\s]+'
        if not re.search(url_pattern, message.content):
            try:
                await message.delete()
                
                embed = nextcord.Embed(
                    title="üîó Solo links permitidos",
                    description="Este canal es espec√≠ficamente para compartir enlaces.\n\nPara conversaciones, usa el chat general.",
                    color=0xffaa00
                )
                embed.set_footer(text="Esta es una advertencia autom√°tica, no un warn oficial.")
                
                await message.author.send(embed=embed)
                
            except:
                pass

def setup(bot):
    bot.add_cog(AutoRules(bot))

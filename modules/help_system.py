import nextcord
from nextcord.ext import commands
import logging

logger = logging.getLogger(__name__)

class HelpSystem(commands.Cog):
    """sistema de ayuda completo"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @nextcord.slash_command(
        name="help",
        description="Muestra todos los comandos disponibles de Dabot"
    )
    async def help_command(
        self,
        interaction: nextcord.Interaction,
        categoria: str = nextcord.SlashOption(
            description="Categor√≠a espec√≠fica de comandos",
            required=False,
            choices=[
                "general", "moderacion", "entretenimiento", "economia",
                "musica", "tickets", "voicemaster", "servidor", "emojis", "admin"
            ]
        )
    ):
        """comando de ayuda completo"""
        
        if categoria:
            await self._show_category_help(interaction, categoria)
        else:
            await self._show_main_help(interaction)
    
    async def _show_main_help(self, interaction: nextcord.Interaction):
        """mostrar ayuda principal"""
        
        embed = nextcord.Embed(
            title="ü§ñ Dabot v2 - Sistema de Ayuda",
            description="¬°Hola! Soy **Dabot**, tu asistente completo para Discord. Aqu√≠ est√°n todas mis funciones:",
            color=nextcord.Color.blue()
        )
        
        # Categor√≠as principales
        categories = {
            "üéØ **General**": "`/help categoria:general` - Comandos b√°sicos y utilidades",
            "üõ°Ô∏è **Moderaci√≥n**": "`/help categoria:moderacion` - Herramientas de moderaci√≥n",
            "üéÆ **Entretenimiento**": "`/help categoria:entretenimiento` - Memes, juegos y diversi√≥n",
            "üí∞ **Econom√≠a**": "`/help categoria:economia` - Sistema econ√≥mico completo",
            "üéµ **M√∫sica**": "`/help categoria:musica` - Reproductor de m√∫sica avanzado",
            "üé´ **Tickets**": "`/help categoria:tickets` - Sistema de soporte",
            "üéôÔ∏è **VoiceMaster**": "`/help categoria:voicemaster` - Canales de voz temporales",
            "üèóÔ∏è **Servidor**": "`/help categoria:servidor` - Plantillas y configuraci√≥n",
            "üòÄ **Emojis & Stickers**": "`/help categoria:emojis` - Personalizaci√≥n visual",
            "‚öôÔ∏è **Administraci√≥n**": "`/help categoria:admin` - Comandos administrativos"
        }
        
        description = embed.description + "\n\n"
        for category, desc in categories.items():
            description += f"{category}\n{desc}\n\n"
        
        embed.description = description
        
        embed.add_field(
            name="üîó Enlaces √ötiles",
            value="‚Ä¢ [Servidor de Soporte](https://discord.gg/tu-servidor)\n‚Ä¢ [Invitar Bot](https://discord.com/oauth2/authorize?client_id=TU_BOT_ID&permissions=8&scope=bot%20applications.commands)\n‚Ä¢ [GitHub](https://github.com/davito-03/dabot-v2)",
            inline=False
        )
        
        embed.add_field(
            name="üìä Estad√≠sticas",
            value=f"‚Ä¢ Servidores: {len(self.bot.guilds)}\n‚Ä¢ Usuarios: {len(self.bot.users)}\n‚Ä¢ Comandos: 50+",
            inline=True
        )
        
        embed.add_field(
            name="üí° Tip",
            value="Usa `/help categoria:nombre` para ver comandos espec√≠ficos de cada categor√≠a",
            inline=True
        )
        
        embed.set_footer(text="Dabot v2 | Bot desarrollado con ‚ù§Ô∏è para la comunidad")
        embed.set_thumbnail(url=self.bot.user.display_avatar.url)
        
        await interaction.response.send_message(embed=embed)
    
    async def _show_category_help(self, interaction: nextcord.Interaction, categoria: str):
        """mostrar ayuda de categor√≠a espec√≠fica"""
        
        embeds = {
            "general": self._get_general_help(),
            "moderacion": self._get_moderation_help(),
            "entretenimiento": self._get_entertainment_help(),
            "economia": self._get_economy_help(),
            "musica": self._get_music_help(),
            "tickets": self._get_tickets_help(),
            "voicemaster": self._get_voicemaster_help(),
            "servidor": self._get_server_help(),
            "emojis": self._get_emojis_help(),
            "admin": self._get_admin_help()
        }
        
        embed = embeds.get(categoria)
        if embed:
            await interaction.response.send_message(embed=embed)
        else:
            await interaction.response.send_message("‚ùå Categor√≠a no encontrada.", ephemeral=True)
    
    def _get_general_help(self):
        embed = nextcord.Embed(
            title="üéØ Comandos Generales",
            description="Comandos b√°sicos y utilidades generales",
            color=nextcord.Color.green()
        )
        
        commands_list = [
            "`/help` - Muestra este men√∫ de ayuda",
            "`/ping` - Verifica la latencia del bot",
            "`/userinfo [usuario]` - Informaci√≥n de un usuario",
            "`/serverinfo` - Informaci√≥n del servidor",
            "`/avatar [usuario]` - Avatar de un usuario",
            "`/nivel [usuario]` - Ver nivel y experiencia"
        ]
        
        embed.add_field(
            name="üìã Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        return embed
    
    def _get_moderation_help(self):
        embed = nextcord.Embed(
            title="üõ°Ô∏è Comandos de Moderaci√≥n",
            description="Herramientas para mantener el orden en tu servidor",
            color=nextcord.Color.red()
        )
        
        commands_list = [
            "`/ban [usuario] [raz√≥n]` - Banear usuario",
            "`/kick [usuario] [raz√≥n]` - Expulsar usuario",
            "`/timeout [usuario] [tiempo] [raz√≥n]` - Silenciar temporalmente",
            "`/warn [usuario] [raz√≥n]` - Advertir usuario",
            "`/clear [cantidad]` - Limpiar mensajes",
            "`/slowmode [segundos]` - Modo lento del canal"
        ]
        
        embed.add_field(
            name="‚öñÔ∏è Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="‚ö†Ô∏è Permisos Requeridos",
            value="La mayor√≠a requieren permisos de **Gestionar Servidor** o **Moderar Miembros**",
            inline=False
        )
        
        return embed
    
    def _get_entertainment_help(self):
        embed = nextcord.Embed(
            title="üéÆ Comandos de Entretenimiento",
            description="Diversi√≥n, memes y juegos para tu servidor",
            color=nextcord.Color.purple()
        )
        
        commands_list = [
            "`/meme random` - Meme aleatorio",
            "`/meme chiste` - Chiste del d√≠a",
            "`/juegos verdad_o_reto` - Juego de verdad o reto",
            "`/juegos bola8 [pregunta]` - Bola m√°gica 8",
            "`/amor [usuario1] [usuario2]` - Calculadora de amor",
            "`/publicacion` - Crear publicaci√≥n tem√°tica",
            "`/confesion enviar` - Enviar confesi√≥n an√≥nima"
        ]
        
        embed.add_field(
            name="üé≤ Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        return embed
    
    def _get_economy_help(self):
        embed = nextcord.Embed(
            title="üí∞ Sistema de Econom√≠a",
            description="Sistema econ√≥mico completo estilo Mee6",
            color=nextcord.Color.gold()
        )
        
        commands_list = [
            "`/economia balance [usuario]` - Ver monedas",
            "`/economia trabajar` - Trabajar para ganar dinero",
            "`/economia apostar [cantidad]` - Apostar en el casino",
            "`/economia robar [usuario]` - Intentar robar",
            "`/economia invertir [cantidad] [tiempo]` - Invertir dinero",
            "`/economia crypto` - Ver mercado de criptomonedas",
            "`/tienda ver` - Ver tienda del servidor",
            "`/tienda comprar [item]` - Comprar art√≠culo"
        ]
        
        embed.add_field(
            name="üíé Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="üèÜ Caracter√≠sticas",
            value="‚Ä¢ 10 trabajos diferentes\n‚Ä¢ Casino con m√∫ltiples juegos\n‚Ä¢ Sistema de inversiones\n‚Ä¢ Criptomonedas simuladas\n‚Ä¢ Tienda personalizable",
            inline=False
        )
        
        return embed
    
    def _get_music_help(self):
        embed = nextcord.Embed(
            title="üéµ Comandos de M√∫sica",
            description="Reproductor de m√∫sica avanzado con m√∫ltiples fuentes",
            color=nextcord.Color.orange()
        )
        
        commands_list = [
            "`/play [canci√≥n/url]` - Reproducir m√∫sica",
            "`/pause` - Pausar reproducci√≥n",
            "`/resume` - Reanudar reproducci√≥n",
            "`/stop` - Detener y limpiar cola",
            "`/skip` - Saltar canci√≥n actual",
            "`/queue` - Ver cola de reproducci√≥n",
            "`/volume [0-100]` - Ajustar volumen",
            "`/nowplaying` - Canci√≥n actual"
        ]
        
        embed.add_field(
            name="üé∂ Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="üåê Fuentes Compatibles",
            value="‚Ä¢ YouTube\n‚Ä¢ Spotify\n‚Ä¢ SoundCloud\n‚Ä¢ Enlaces directos",
            inline=False
        )
        
        return embed
    
    def _get_tickets_help(self):
        embed = nextcord.Embed(
            title="üé´ Sistema de Tickets",
            description="Sistema de soporte con transcripciones autom√°ticas",
            color=nextcord.Color.blurple()
        )
        
        commands_list = [
            "`/ticket create [raz√≥n]` - Crear ticket de soporte",
            "`/ticket close` - Cerrar ticket actual",
            "`/ticket add [usuario]` - A√±adir usuario al ticket",
            "`/ticket remove [usuario]` - Quitar usuario del ticket",
            "`/ticket setup` - Configurar sistema (admin)",
            "`/transcript` - Generar transcripci√≥n"
        ]
        
        embed.add_field(
            name="üéØ Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="üìù Caracter√≠sticas",
            value="‚Ä¢ Transcripciones autom√°ticas\n‚Ä¢ Gesti√≥n de permisos\n‚Ä¢ Logs completos\n‚Ä¢ Interfaz intuitiva",
            inline=False
        )
        
        return embed
    
    def _get_voicemaster_help(self):
        embed = nextcord.Embed(
            title="üéôÔ∏è VoiceMaster",
            description="Sistema de canales de voz temporales personalizables",
            color=nextcord.Color.dark_blue()
        )
        
        commands_list = [
            "`/voice setup` - Configurar VoiceMaster (admin)",
            "`/voice lock` - Bloquear tu canal",
            "`/voice unlock` - Desbloquear tu canal",
            "`/voice limit [n√∫mero]` - L√≠mite de usuarios",
            "`/voice name [nombre]` - Cambiar nombre",
            "`/voice transfer [usuario]` - Transferir propiedad"
        ]
        
        embed.add_field(
            name="üîß Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="‚ö° Funcionamiento",
            value="1. √önete al canal **‚ûï Crear Canal**\n2. Se crea autom√°ticamente tu canal\n3. Gestiona con botones o comandos",
            inline=False
        )
        
        return embed
    
    def _get_server_help(self):
        embed = nextcord.Embed(
            title="üèóÔ∏è Configuraci√≥n de Servidor",
            description="Plantillas y configuraciones autom√°ticas",
            color=nextcord.Color.teal()
        )
        
        commands_list = [
            "`/server template` - Crear plantilla de servidor",
            "`/server stats` - Configurar estad√≠sticas autom√°ticas",
            "`/verificacion setup` - Sistema de verificaci√≥n",
            "`/confesiones setup` - Configurar confesiones",
            "`/niveles config` - Configurar sistema de niveles"
        ]
        
        embed.add_field(
            name="üõ†Ô∏è Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="üé® Plantillas Disponibles",
            value="‚Ä¢ Gaming (esports y clanes)\n‚Ä¢ Comunidad (chat general)\n‚Ä¢ Estudio (acad√©mico)\n‚Ä¢ Empresarial (corporativo)\n‚Ä¢ Tech (programaci√≥n)",
            inline=False
        )
        
        return embed
    
    def _get_admin_help(self):
        embed = nextcord.Embed(
            title="‚öôÔ∏è Comandos de Administraci√≥n",
            description="Herramientas administrativas avanzadas",
            color=nextcord.Color.dark_red()
        )
        
        commands_list = [
            "`/say [mensaje]` - Hacer que el bot diga algo",
            "`/embed [t√≠tulo] [descripci√≥n]` - Crear embed personalizado",
            "`/announce [mensaje]` - Anuncio con formato especial",
            "`/config view` - Ver configuraci√≥n del servidor",
            "`/logs setup` - Configurar logs de moderaci√≥n"
        ]
        
        embed.add_field(
            name="üîê Comandos Disponibles",
            value="\n".join(commands_list),
            inline=False
        )
        
        embed.add_field(
            name="‚ö†Ô∏è Importante",
            value="Estos comandos requieren permisos de **Gestionar Servidor** o superiores",
            inline=False
        )
        
        return embed
    
    def _get_emojis_help(self):
        embed = nextcord.Embed(
            title="üòÄ Emojis & Stickers",
            description="Personaliza tu servidor con emojis y stickers chulos",
            color=nextcord.Color.yellow()
        )
        
        emoji_commands = [
            "`/emoji add [url] [nombre]` - A√±adir emoji desde URL",
            "`/emoji pack [pack]` - Instalar pack de emojis tem√°tico",
            "`/emoji random` - A√±adir emoji aleatorio popular",
            "`/emoji list` - Ver emojis del servidor",
            "`/emoji remove [nombre]` - Eliminar emoji del servidor"
        ]
        
        sticker_commands = [
            "`/sticker add [url] [nombre]` - A√±adir sticker personalizado",
            "`/sticker pack [pack]` - Instalar pack de stickers",
            "`/sticker search [query]` - Buscar stickers populares",
            "`/sticker list` - Ver stickers del servidor",
            "`/sticker remove [id]` - Eliminar sticker",
            "`/sticker trending` - Ver stickers populares"
        ]
        
        embed.add_field(
            name="üòÄ Comandos de Emojis",
            value="\n".join(emoji_commands),
            inline=False
        )
        
        embed.add_field(
            name="üìã Comandos de Stickers",
            value="\n".join(sticker_commands),
            inline=False
        )
        
        embed.add_field(
            name="üì¶ Packs Disponibles",
            value="**Emojis:** pepe, kappa, discord, gaming, cute\n**Stickers:** memes, anime, cats, gaming, reactions",
            inline=False
        )
        
        embed.add_field(
            name="‚ö†Ô∏è Requisitos",
            value="‚Ä¢ **Emojis:** Permisos de Gestionar Emojis\n‚Ä¢ **Stickers:** Gestionar Servidor + Nitro Nivel 2+",
            inline=False
        )
        
        return embed

def setup(bot):
    """cargar el cog"""
    bot.add_cog(HelpSystem(bot))

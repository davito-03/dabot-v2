"""
M√≥dulo de Comandos de Ayuda para el bot de Discord
Proporciona informaci√≥n sobre todos los comandos disponibles
"""

import logging
import nextcord
from nextcord.ext import commands

logger = logging.getLogger(__name__)

class HelpCommands(commands.Cog):
    """Clase para comandos de ayuda"""
    
    def __init__(self, bot):
        self.bot = bot
    
    @commands.command(name='help', aliases=['ayuda'])
    async def help_command(self, ctx, category: str = None):
        """
        Muestra informaci√≥n de ayuda sobre los comandos
        Uso: !help [categor√≠a]
        """
        try:
            if category is None:
                # Mostrar ayuda general
                embed = nextcord.Embed(
                    title="ü§ñ Ayuda del Bot - DaBot v2",
                    description="Bot multiprop√≥sito para Discord con moderaci√≥n, entretenimiento, m√∫sica y m√°s.",
                    color=nextcord.Color.blue()
                )
                
                embed.add_field(
                    name="üìã Categor√≠as disponibles:",
                    value=(
                        "`!help moderacion` - Comandos de moderaci√≥n\n"
                        "`!help entretenimiento` - Comandos de entretenimiento\n"
                        "`!help musica` - Comandos de m√∫sica\n"
                        "`!help tareas` - Comandos de tareas autom√°ticas\n"
                        "`!help general` - Comandos generales"
                    ),
                    inline=False
                )
                
                embed.add_field(
                    name="‚ÑπÔ∏è Informaci√≥n:",
                    value=(
                        "‚Ä¢ Usa tanto comandos con prefijo `!` como slash commands `/`\n"
                        "‚Ä¢ Los comandos de moderaci√≥n requieren permisos de administrador\n"
                        "‚Ä¢ Para m√∫sica, necesitas estar en un canal de voz"
                    ),
                    inline=False
                )
                
                embed.set_footer(text="Usa !help [categor√≠a] para ver comandos espec√≠ficos")
                
            elif category.lower() in ['moderacion', 'mod']:
                embed = nextcord.Embed(
                    title="üõ°Ô∏è Comandos de Moderaci√≥n",
                    description="Comandos para administrar el servidor (requieren permisos de administrador)",
                    color=nextcord.Color.red()
                )
                
                embed.add_field(
                    name="!ban @usuario [raz√≥n]",
                    value="Banea a un usuario del servidor",
                    inline=False
                )
                
                embed.add_field(
                    name="!kick @usuario [raz√≥n]",
                    value="Expulsa a un usuario del servidor",
                    inline=False
                )
                
                embed.add_field(
                    name="!clear [cantidad]",
                    value="Elimina mensajes (m√°ximo 100, por defecto 5)",
                    inline=False
                )
                
                embed.add_field(
                    name="üìù Notas:",
                    value=(
                        "‚Ä¢ Todos los comandos requieren confirmaci√≥n\n"
                        "‚Ä¢ Tambi√©n disponibles como slash commands (/ban, /kick, /clear)\n"
                        "‚Ä¢ Se env√≠a notificaci√≥n por DM al usuario afectado"
                    ),
                    inline=False
                )
                
            elif category.lower() in ['entretenimiento', 'fun']:
                embed = nextcord.Embed(
                    title="üéÆ Comandos de Entretenimiento",
                    description="Comandos divertidos para amenizar el servidor",
                    color=nextcord.Color.yellow()
                )
                
                embed.add_field(
                    name="!joke o !chiste",
                    value="Obt√©n un chiste aleatorio",
                    inline=False
                )
                
                embed.add_field(
                    name="!8ball [pregunta]",
                    value="Haz una pregunta a la bola m√°gica 8",
                    inline=False
                )
                
                embed.add_field(
                    name="!flip o !moneda",
                    value="Lanza una moneda virtual",
                    inline=False
                )
                
                embed.add_field(
                    name="!dice [caras]",
                    value="Lanza un dado (por defecto 6 caras, m√°ximo 100)",
                    inline=False
                )
                
                embed.add_field(
                    name="üìù Ejemplos:",
                    value=(
                        "‚Ä¢ `!8ball ¬øLlover√° ma√±ana?`\n"
                        "‚Ä¢ `!dice 20` (dado de 20 caras)\n"
                        "‚Ä¢ Todos tambi√©n disponibles como slash commands"
                    ),
                    inline=False
                )
                
            elif category.lower() in ['musica', 'music']:
                embed = nextcord.Embed(
                    title="üéµ Comandos de M√∫sica",
                    description="Comandos para reproducir m√∫sica desde YouTube",
                    color=nextcord.Color.green()
                )
                
                embed.add_field(
                    name="!play [URL o b√∫squeda]",
                    value="Reproduce m√∫sica desde YouTube",
                    inline=False
                )
                
                embed.add_field(
                    name="!skip o !s",
                    value="Salta la canci√≥n actual",
                    inline=False
                )
                
                embed.add_field(
                    name="!stop",
                    value="Detiene la m√∫sica y limpia la cola",
                    inline=False
                )
                
                embed.add_field(
                    name="!queue o !q",
                    value="Muestra la cola de reproducci√≥n",
                    inline=False
                )
                
                embed.add_field(
                    name="!volume [0-100]",
                    value="Ajusta el volumen de reproducci√≥n",
                    inline=False
                )
                
                embed.add_field(
                    name="!disconnect",
                    value="Desconecta el bot del canal de voz",
                    inline=False
                )
                
                embed.add_field(
                    name="üìù Requisitos:",
                    value=(
                        "‚Ä¢ Debes estar en un canal de voz\n"
                        "‚Ä¢ El bot necesita permisos para conectarse y hablar\n"
                        "‚Ä¢ Soporta URLs de YouTube y b√∫squedas por texto"
                    ),
                    inline=False
                )
                
            elif category.lower() in ['tareas', 'tasks', 'automaticas']:
                embed = nextcord.Embed(
                    title="‚è∞ Comandos de Tareas Autom√°ticas",
                    description="Comandos para configurar mensajes autom√°ticos",
                    color=nextcord.Color.purple()
                )
                
                embed.add_field(
                    name="!setdaily [#canal]",
                    value="Configura mensajes diarios autom√°ticos (8:00 AM)",
                    inline=False
                )
                
                embed.add_field(
                    name="!removedaily",
                    value="Desactiva los mensajes diarios",
                    inline=False
                )
                
                embed.add_field(
                    name="!dailystatus",
                    value="Muestra el estado de los mensajes diarios",
                    inline=False
                )
                
                embed.add_field(
                    name="!testdaily",
                    value="Env√≠a un mensaje diario de prueba",
                    inline=False
                )
                
                embed.add_field(
                    name="üìù Notas:",
                    value=(
                        "‚Ä¢ Requiere permisos de administrador\n"
                        "‚Ä¢ Los mensajes se env√≠an a las 8:00 AM hora del servidor\n"
                        "‚Ä¢ Si no especificas canal, usa el canal actual"
                    ),
                    inline=False
                )
                
            elif category.lower() in ['general']:
                embed = nextcord.Embed(
                    title="üîß Comandos Generales",
                    description="Comandos b√°sicos del bot",
                    color=nextcord.Color.gray()
                )
                
                embed.add_field(
                    name="!help [categor√≠a]",
                    value="Muestra esta ayuda",
                    inline=False
                )
                
                embed.add_field(
                    name="!ping",
                    value="Muestra la latencia del bot",
                    inline=False
                )
                
                embed.add_field(
                    name="!info",
                    value="Informaci√≥n del bot y del servidor",
                    inline=False
                )
                
            else:
                embed = nextcord.Embed(
                    title="‚ùå Categor√≠a no encontrada",
                    description=f"La categor√≠a `{category}` no existe.",
                    color=nextcord.Color.red()
                )
                
                embed.add_field(
                    name="Categor√≠as disponibles:",
                    value=(
                        "`moderacion`, `entretenimiento`, `musica`, `tareas`, `general`"
                    ),
                    inline=False
                )
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            logger.error(f"Error en comando help: {e}")
            await ctx.send("‚ùå Error al mostrar la ayuda.")
    
    @nextcord.slash_command(name="help", description="Muestra ayuda sobre los comandos del bot")
    async def slash_help(
        self,
        interaction: nextcord.Interaction,
        category: str = nextcord.SlashOption(
            description="Categor√≠a de comandos",
            choices=["moderacion", "entretenimiento", "musica", "tareas", "general"],
            required=False
        )
    ):
        """Comando slash para ayuda"""
        ctx = await commands.Context.from_interaction(interaction)
        await self.help_command(ctx, category)
    
    @commands.command(name='ping')
    async def ping(self, ctx):
        """
        Muestra la latencia del bot
        Uso: !ping
        """
        try:
            latency = round(self.bot.latency * 1000)
            
            embed = nextcord.Embed(
                title="üèì Pong!",
                description=f"Latencia: **{latency}ms**",
                color=nextcord.Color.green() if latency < 100 else nextcord.Color.orange() if latency < 300 else nextcord.Color.red()
            )
            
            # Agregar indicador de estado
            if latency < 100:
                embed.add_field(name="Estado", value="üü¢ Excelente", inline=True)
            elif latency < 300:
                embed.add_field(name="Estado", value="üü° Bueno", inline=True)
            else:
                embed.add_field(name="Estado", value="üî¥ Lento", inline=True)
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            logger.error(f"Error en comando ping: {e}")
            await ctx.send("‚ùå Error al verificar la latencia.")
    
    @nextcord.slash_command(name="ping", description="Muestra la latencia del bot")
    async def slash_ping(self, interaction: nextcord.Interaction):
        """Comando slash para ping"""
        latency = round(self.bot.latency * 1000)
        embed = nextcord.Embed(
            title="üèì Pong!",
            description=f"Latencia: {latency}ms",
            color=nextcord.Color.green()
        )
        await interaction.response.send_message(embed=embed)
    
    @commands.command(name='info')
    async def server_info(self, ctx):
        """
        Muestra informaci√≥n del bot y del servidor
        Uso: !info
        """
        try:
            embed = nextcord.Embed(
                title="ü§ñ Informaci√≥n del Bot",
                description="DaBot v2 - Bot multiprop√≥sito para Discord",
                color=nextcord.Color.blue()
            )
            
            # Informaci√≥n del bot
            embed.add_field(
                name="üìä Estad√≠sticas del Bot:",
                value=(
                    f"**Servidores:** {len(self.bot.guilds)}\n"
                    f"**Usuarios:** {len(self.bot.users)}\n"
                    f"**Comandos cargados:** {len(self.bot.commands)}\n"
                    f"**Latencia:** {round(self.bot.latency * 1000)}ms"
                ),
                inline=True
            )
            
            # Informaci√≥n del servidor actual
            embed.add_field(
                name="üè† Informaci√≥n del Servidor:",
                value=(
                    f"**Nombre:** {ctx.guild.name}\n"
                    f"**ID:** {ctx.guild.id}\n"
                    f"**Miembros:** {ctx.guild.member_count}\n"
                    f"**Creado:** {ctx.guild.created_at.strftime('%d/%m/%Y')}"
                ),
                inline=True
            )
            
            # Informaci√≥n t√©cnica
            embed.add_field(
                name="‚öôÔ∏è Informaci√≥n T√©cnica:",
                value=(
                    f"**Lenguaje:** Python 3.13\n"
                    f"**Librer√≠a:** nextcord 2.6.0\n"
                    f"**Host:** Render.com\n"
                    f"**Prefijo:** !"
                ),
                inline=True
            )
            
            # Funcionalidades
            embed.add_field(
                name="üéØ Funcionalidades:",
                value=(
                    "üõ°Ô∏è Moderaci√≥n\n"
                    "üéÆ Entretenimiento\n"
                    "üéµ M√∫sica\n"
                    "‚è∞ Tareas autom√°ticas"
                ),
                inline=True
            )
            
            embed.set_thumbnail(url=self.bot.user.avatar.url if self.bot.user.avatar else None)
            embed.set_footer(text="Desarrollado con ‚ù§Ô∏è usando nextcord")
            
            await ctx.send(embed=embed)
            
        except Exception as e:
            logger.error(f"Error en comando info: {e}")
            await ctx.send("‚ùå Error al mostrar la informaci√≥n.")
    
    @nextcord.slash_command(name="info", description="Muestra informaci√≥n del bot y del servidor")
    async def slash_info(self, interaction: nextcord.Interaction):
        """Comando slash para informaci√≥n"""
        try:
            embed = nextcord.Embed(
                title="ü§ñ Informaci√≥n del Bot",
                description="DaBot v2 - Bot multiprop√≥sito para Discord",
                color=nextcord.Color.blue()
            )
            
            # Informaci√≥n del bot
            embed.add_field(
                name="üìä Estad√≠sticas del Bot:",
                value=(
                    f"**Servidores:** {len(self.bot.guilds)}\n"
                    f"**Usuarios:** {len(self.bot.users)}\n"
                    f"**Comandos cargados:** {len(self.bot.commands)}\n"
                    f"**Latencia:** {round(self.bot.latency * 1000)}ms"
                ),
                inline=True
            )
            
            # Informaci√≥n del servidor actual
            embed.add_field(
                name="üè† Informaci√≥n del Servidor:",
                value=(
                    f"**Nombre:** {interaction.guild.name}\n"
                    f"**ID:** {interaction.guild.id}\n"
                    f"**Miembros:** {interaction.guild.member_count}\n"
                    f"**Creado:** {interaction.guild.created_at.strftime('%d/%m/%Y')}"
                ),
                inline=True
            )
            
            # Informaci√≥n t√©cnica
            embed.add_field(
                name="‚öôÔ∏è Informaci√≥n T√©cnica:",
                value=(
                    f"**Lenguaje:** Python 3.13\n"
                    f"**Librer√≠a:** nextcord 2.6.0\n"
                    f"**Host:** Render.com\n"
                    f"**Prefijo:** !"
                ),
                inline=True
            )
            
            # Funcionalidades
            embed.add_field(
                name="üéØ Funcionalidades:",
                value=(
                    "üõ°Ô∏è Moderaci√≥n\n"
                    "üéÆ Entretenimiento\n"
                    "üéµ M√∫sica\n"
                    "‚è∞ Tareas autom√°ticas"
                ),
                inline=True
            )
            
            embed.set_thumbnail(url=self.bot.user.avatar.url if self.bot.user.avatar else None)
            embed.set_footer(text="Desarrollado con ‚ù§Ô∏è usando nextcord")
            
            await interaction.response.send_message(embed=embed)
            
        except Exception as e:
            logger.error(f"Error en comando info: {e}")
            await interaction.response.send_message("‚ùå Error al mostrar la informaci√≥n.", ephemeral=True)

def setup(bot):
    """Funci√≥n setup para cargar el cog"""
    return HelpCommands(bot)
